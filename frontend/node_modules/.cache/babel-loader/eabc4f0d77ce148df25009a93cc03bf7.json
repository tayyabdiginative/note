{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\windows 10\\\\Documents\\\\reactPractice\\\\crm2\\\\frontend\\\\src\\\\components\\\\MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainScreen from \"../components/MainScreen\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../redux/action/noteAction\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = _ref => {\n  _s();\n\n  let {\n    search\n  } = _ref;\n  const [myNotes, setNotes] = useState([]);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const noteList = useSelector(state => state.noteList);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    notes\n  } = noteList;\n  const noteUpdate = useSelector(state => state.noteUpdate);\n  const {\n    success: successUpdate\n  } = noteUpdate;\n  const noteDelete = useSelector(state => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = noteDelete; // const noteCreate = useSelector((state) => state.noteCreate);\n  // const { success: successCreate } = noteCreate;\n  // }\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  useEffect(() => {\n    dispatch(listNotes());\n\n    if (!userLogin) {\n      navigate(\"/\");\n    }\n  }, [dispatch, successUpdate, userLogin, noteDelete]);\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: `Wellcome back ${userLogin.userInfo.name}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/createnote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: 10,\n          marginBottom: 6\n        },\n        size: \"lg\",\n        children: \"Create new Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), errorDelete && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\",\n      children: errorDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), loadingDelete && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), notes && notes.filter(filteredNote => filteredNote.title.toLowerCase().includes(search.toLowerCase())).reverse().map(note => /*#__PURE__*/_jsxDEV(Accordion, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            // onClick={() => ModelShow(note)}\n            style: {\n              color: \"black\",\n              textDecoration: \"none\",\n              flex: 1,\n              cursor: \"pointer\",\n              alignSelf: \"center\",\n              fontSize: 18\n            },\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              as: Card.Text,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), userLogin.userInfo.isAdmin == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              href: `/note/${note._id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => deleteHandler(note._id),\n              variant: \"danger\",\n              className: \"mx-2\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"success\",\n                children: [\"Category - \", note.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n              className: \"blockquote mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: note.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                className: \"blockquote-footer\",\n                children: [\"Created on\", \" \", /*#__PURE__*/_jsxDEV(\"cite\", {\n                  title: \"Source Title\",\n                  children: note.createdAt.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyNotes, \"4OQ6tpf/3BagTQDVY+Rx+ZUQiaU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["C:/Users/windows 10/Documents/reactPractice/crm2/frontend/src/components/MyNotes.js"],"names":["React","useEffect","useState","Link","MainScreen","Accordion","Badge","Button","Card","ReactMarkdown","useDispatch","useSelector","deleteNoteAction","listNotes","useNavigate","Loading","ErrorMessage","MyNotes","search","myNotes","setNotes","dispatch","navigate","noteList","state","userLogin","loading","error","notes","noteUpdate","success","successUpdate","noteDelete","loadingDelete","errorDelete","successDelete","deleteHandler","id","window","confirm","userInfo","name","marginLeft","marginBottom","filter","filteredNote","title","toLowerCase","includes","reverse","map","note","margin","display","color","textDecoration","flex","cursor","alignSelf","fontSize","Text","isAdmin","_id","category","content","createdAt","substring"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../components/MainScreen\";\r\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, listNotes } from \"../redux/action/noteAction\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst MyNotes = ({ search }) => {\r\n  const [myNotes, setNotes] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, notes } = noteList;\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n  // const noteCreate = useSelector((state) => state.noteCreate);\r\n  // const { success: successCreate } = noteCreate;\r\n\r\n  // }\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userLogin) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [dispatch, successUpdate, userLogin, noteDelete]);\r\n  return (\r\n    <MainScreen title={`Wellcome back ${userLogin.userInfo.name}`}>\r\n      <Link to=\"/createnote\">\r\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n          Create new Note\r\n        </Button>\r\n      </Link>\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {errorDelete && (\r\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n      )}\r\n      {loading && <Loading />}\r\n      {loadingDelete && <Loading />}\r\n      {notes &&\r\n        notes\r\n          .filter((filteredNote) =>\r\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .reverse()\r\n          .map((note) => (\r\n            <Accordion>\r\n              <Card style={{ margin: 10 }}>\r\n                <Card.Header style={{ display: \"flex\" }}>\r\n                  <span\r\n                    // onClick={() => ModelShow(note)}\r\n                    style={{\r\n                      color: \"black\",\r\n                      textDecoration: \"none\",\r\n                      flex: 1,\r\n                      cursor: \"pointer\",\r\n                      alignSelf: \"center\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    <Accordion as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                      {note.title}\r\n                    </Accordion>\r\n                  </span>\r\n                  {userLogin.userInfo.isAdmin == true ? (\r\n                    <div>\r\n                      <Button href={`/note/${note._id}`}>Edit</Button>\r\n                      <Button\r\n                        onClick={() => deleteHandler(note._id)}\r\n                        variant=\"danger\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card.Header>\r\n                <Accordion.Collapse>\r\n                  <Card.Body>\r\n                    <h4>\r\n                      <Badge variant=\"success\">\r\n                        Category - {note.category}\r\n                      </Badge>\r\n                    </h4>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                      <ReactMarkdown>{note.content}</ReactMarkdown>\r\n                      <footer className=\"blockquote-footer\">\r\n                        Created on{\" \"}\r\n                        <cite title=\"Source Title\">\r\n                          {note.createdAt.substring(0, 10)}\r\n                        </cite>\r\n                      </footer>\r\n                    </blockquote>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          ))}{\" \"}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n"]},"metadata":{},"sourceType":"module"}