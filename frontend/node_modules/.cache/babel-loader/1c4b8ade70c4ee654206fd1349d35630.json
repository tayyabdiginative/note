{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\windows 10\\\\Documents\\\\reactPractice\\\\crm2\\\\frontend\\\\src\\\\screens\\\\SingleNote\\\\SingleNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../redux/action/noteAction\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleNote(_ref) {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const param_id = location.pathname.split(\"/\");\n  const navigate = useNavigate();\n  const noteUpdate = useSelector(state => state.noteUpdate);\n  const {\n    loading,\n    error\n  } = noteUpdate;\n  const noteDelete = useSelector(state => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete\n  } = noteDelete;\n  const userLogin = useSelector(state => state.userLogin);\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n\n    navigate(\"/notes\");\n  };\n\n  useEffect(() => {\n    if (userLogin.userInfo.isAdmin == false) {\n      navigate(\"/notes\");\n    } else {\n      const fetching = async () => {\n        const {\n          data\n        } = await axios.get(`http://localhost:8000/api/notes/${param_id[2]}`);\n        setTitle(data.title);\n        setContent(data.content);\n        setCategory(data.category);\n        setDate(data.updatedAt);\n      };\n\n      fetching();\n    }\n  }, [param_id[2], date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = e => {\n    e.preventDefault();\n    dispatch(updateNoteAction(param_id[2], title, content, category));\n    if (!title || !content || !category) return;\n    resetHandler();\n    navigate(\"/notes\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Edit Note\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Edit your Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: updateHandler,\n          children: [loadingDelete && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 31\n          }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }, this), errorDelete && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: errorDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"title\",\n              placeholder: \"Enter the title\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              placeholder: \"Enter the content\",\n              rows: 4,\n              value: content,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), content && /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Note Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"content\",\n              placeholder: \"Enter the Category\",\n              value: category,\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Update Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-2\",\n            variant: \"danger\",\n            onClick: () => deleteHandler(param_id[2]),\n            children: \"Delete Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Updated on - \", date.substring(0, 10)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleNote, \"21fio012oSHvmHRShHGIo+VKve0=\", false, function () {\n  return [useDispatch, useLocation, useNavigate, useSelector, useSelector, useSelector];\n});\n\n_c = SingleNote;\nexport default SingleNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleNote\");","map":{"version":3,"sources":["C:/Users/windows 10/Documents/reactPractice/crm2/frontend/src/screens/SingleNote/SingleNote.js"],"names":["React","useEffect","useState","MainScreen","Button","Card","Form","useDispatch","useSelector","deleteNoteAction","updateNoteAction","ErrorMessage","Loading","ReactMarkdown","useLocation","useNavigate","axios","SingleNote","match","history","title","setTitle","content","setContent","category","setCategory","date","setDate","dispatch","location","param_id","pathname","split","navigate","noteUpdate","state","loading","error","noteDelete","loadingDelete","errorDelete","userLogin","deleteHandler","id","window","confirm","userInfo","isAdmin","fetching","data","get","updatedAt","resetHandler","updateHandler","e","preventDefault","target","value","substring"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,gBADF,EAEEC,gBAFF,QAGO,+BAHP;AAIA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,OAAwC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAoB;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,EAAtC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,EAAxC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM0B,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,QAAQ,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAjB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAMmB,UAAU,GAAG1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBH,UAA3B;AAEA,QAAMI,UAAU,GAAG9B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACG,UAAlB,CAA9B;AACA,QAAM;AAAEF,IAAAA,OAAO,EAAEG,aAAX;AAA0BF,IAAAA,KAAK,EAAEG;AAAjC,MAAiDF,UAAvD;AACA,QAAMG,SAAS,GAAGjC,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACM,SAAlB,CAA7B;;AAEA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5B,QAAIC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnCjB,MAAAA,QAAQ,CAACnB,gBAAgB,CAACkC,EAAD,CAAjB,CAAR;AACD;;AACDV,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GALD;;AAOAhC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwC,SAAS,CAACK,QAAV,CAAmBC,OAAnB,IAA8B,KAAlC,EAAyC;AACvCd,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,KAFD,MAEO;AACL,YAAMe,QAAQ,GAAG,YAAY;AAC3B,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMjC,KAAK,CAACkC,GAAN,CACpB,mCAAkCpB,QAAQ,CAAC,CAAD,CAAI,EAD1B,CAAvB;AAIAT,QAAAA,QAAQ,CAAC4B,IAAI,CAAC7B,KAAN,CAAR;AACAG,QAAAA,UAAU,CAAC0B,IAAI,CAAC3B,OAAN,CAAV;AACAG,QAAAA,WAAW,CAACwB,IAAI,CAACzB,QAAN,CAAX;AACAG,QAAAA,OAAO,CAACsB,IAAI,CAACE,SAAN,CAAP;AACD,OATD;;AAWAH,MAAAA,QAAQ;AACT;AACF,GAjBQ,EAiBN,CAAClB,QAAQ,CAAC,CAAD,CAAT,EAAcJ,IAAd,CAjBM,CAAT;;AAmBA,QAAM0B,YAAY,GAAG,MAAM;AACzB/B,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMA,QAAM8B,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA3B,IAAAA,QAAQ,CAAClB,gBAAgB,CAACoB,QAAQ,CAAC,CAAD,CAAT,EAAcV,KAAd,EAAqBE,OAArB,EAA8BE,QAA9B,CAAjB,CAAR;AACA,QAAI,CAACJ,KAAD,IAAU,CAACE,OAAX,IAAsB,CAACE,QAA3B,EAAqC;AAErC4B,IAAAA,YAAY;AACZnB,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GAPD;;AAQA,sBACE,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,WAAlB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEoB,aAAhB;AAAA,qBACGd,aAAa,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADpB,EAEGF,KAAK,iBAAI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAAA,sBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFZ,EAGGG,WAAW,iBACV,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAAA,sBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAME,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,WAAW,EAAC,iBAFd;AAGE,cAAA,KAAK,EAAEpB,KAHT;AAIE,cAAA,QAAQ,EAAGkC,CAAD,IAAOjC,QAAQ,CAACiC,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,SAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,EAAE,EAAC,UADL;AAEE,cAAA,WAAW,EAAC,mBAFd;AAGE,cAAA,IAAI,EAAE,CAHR;AAIE,cAAA,KAAK,EAAEnC,OAJT;AAKE,cAAA,QAAQ,EAAGgC,CAAD,IAAO/B,UAAU,CAAC+B,CAAC,CAACE,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,EA0BGnC,OAAO,iBACN,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,qCACE,QAAC,aAAD;AAAA,0BAAgBA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ,eAmCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,SAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,WAAW,EAAC,oBAFd;AAGE,cAAA,KAAK,EAAEE,QAHT;AAIE,cAAA,QAAQ,EAAG8B,CAAD,IAAO7B,WAAW,CAAC6B,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCF,EA4CGrB,OAAO,iBAAI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,kBA5Cd,eA6CE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CF,eAgDE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,OAAO,EAAC,QAFV;AAGE,YAAA,OAAO,EAAE,MAAMM,aAAa,CAACZ,QAAQ,CAAC,CAAD,CAAT,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eA6DE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA,oCACgBJ,IAAI,CAACgC,SAAL,CAAe,CAAf,EAAkB,EAAlB,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA,cA7DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqED;;GA/HQzC,U;UAMUV,W,EACAO,W,EAEAC,W,EAEEP,W,EAGAA,W,EAEDA,W;;;KAhBXS,U;AAiIT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteNoteAction,\r\n  updateNoteAction,\r\n} from \"../../redux/action/noteAction\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const param_id = location.pathname.split(\"/\");\r\n  const navigate = useNavigate();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    navigate(\"/notes\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userLogin.userInfo.isAdmin == false) {\r\n      navigate(\"/notes\");\r\n    } else {\r\n      const fetching = async () => {\r\n        const { data } = await axios.get(\r\n          `http://localhost:8000/api/notes/${param_id[2]}`\r\n        );\r\n\r\n        setTitle(data.title);\r\n        setContent(data.content);\r\n        setCategory(data.category);\r\n        setDate(data.updatedAt);\r\n      };\r\n\r\n      fetching();\r\n    }\r\n  }, [param_id[2], date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNoteAction(param_id[2], title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    navigate(\"/notes\");\r\n  };\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Enter the title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                placeholder=\"Enter the Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              variant=\"danger\"\r\n              onClick={() => deleteHandler(param_id[2])}\r\n            >\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleNote;\r\n"]},"metadata":{},"sourceType":"module"}